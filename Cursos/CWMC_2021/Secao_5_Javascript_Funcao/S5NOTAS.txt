js é multiparadigma

this (algumas linguagens chamam de self)
o this é uma forma de referenciar o objeto atual da função

por exemplo:

A classe cria objetos a partir de uma classe

a classe aluno cria objetos com os atributos da classe

o this aponta para o objeto que esta sendo referenciado no presente momento
e inclusive ele pode variar de momento a momento.
depende da forma como vc chama a função.
this pode ser o elemento, o objeto, o array.
ele é definido quando a função é escrita chamamos de this lexico 
this lexico é diferente de dislexico 

existiram dois motivos para serem criadas as arow functions
1 reduzir a sintaxe (você escreve de maneira mais facil)
2 o fato de ter um this que não varia.

Outra maneira de amarrar o this a função certa é usando o bind

ctrl alt N começa a rodar o codigo, denovo para parar

// função normal

let dobro = function (a) {
   return 2 * a
}

// função arrow com return explicito
dobro = (a) => {
   return 2 * a
}

// função arrow com return implicito

dobro = a => 2 * a // return implicito

// função arrow sem parametro
ola = () => 'Olá'

// função arrow com apenas um parametro mas que pode ser ignorado

ola = _ => 'Olá'
_ não é ausencia de parametro, é um parametro ignoravel.

função arrow sempre é uma função anonima, se quiser usar o resultado
dela depois é necessario guardar o valor em uma variavel.

o js te incentiva a usar arrow function ao facilitar as coisas


